aux_source_directory (. VM_LIST)
aux_source_directory (../os/ VOS_EXT_LIST)
set(CMAKE_C_COMPILER "gcc")
set(CMAKE_CXX_COMPILER "g++")
option(VM_BUILD_DEBUG_VM  "build this vm program in debug mode" ON)
option(VM_BUILD_FAST_VM  "build this vm program for high-speed CPU" ON)
if(VM_BUILD_FAST_VM)
set(VM_OPCYCLE 5000)
else()
set(VM_OPCYCLE 1000)
endif()
message(STATUS ${VM_OPCYCLE} " op-codes is one task-cycle")
if(VM_BUILD_DEBUG_VM)
set(VM_DEBUG 1)
message(STATUS "this is a debug version")
else()
set(VM_DEBUG 0)
message(STATUS "debug printf is disabled")
endif()
link_directories(${PROJECT_SOURCE_DIR}/libbin)
FIND_LIBRARY(VOS_LIB_SO libvoslib.so ${PROJECT_SOURCE_DIR}/libbin)
FIND_LIBRARY(VOS_LIB_DLL libvoslib.dll ${PROJECT_SOURCE_DIR}/libbin)
if(EXISTS ${VOS_LIB_SO})
message(STATUS "found vos lib as so")
set(VOS_LIB,${VOS_LIB_SO})
elseif(EXISTS ${VOS_LIB_DLL})
message(STATUS "found vos lib as dll")
set(VOS_LIB,${VOS_LIB_DLL})
else()
message(STATUS "no vos lib")
endif()
add_compile_options(-Wall -g)
#configs

option(VM_AS_LIB "build vm as lib,default as exe" OFF)
option(VM_AS_LIB "build vm as lib,default as exe" OFF)
include_directories (../include)
if(VM_AS_LIB)
set(VM_IS_LIB 1)
add_definitions(-DVM_NOMAIN)
add_library (VML_shared SHARED ${VM_LIST})
add_library (VML_static STATIC ${VM_LIST})
set_target_properties (VML_shared PROPERTIES OUTPUT_NAME "wasmvmlib")
set_target_properties (VML_static PROPERTIES OUTPUT_NAME "wasmvmlib")
set (LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/libbin)
message(STATUS "vm will be a lib")
else()
set(VM_IS_LIB 0)
add_executable (webasm ${VM_LIST})
target_link_libraries(webasm m rt pthread 
${PROJECT_SOURCE_DIR}/libbin/libvoslib.so)
endif()
set(VM_VERSION 1.0)
configure_file(
        "vmconfig.h.in"
        "${PROJECT_SOURCE_DIR}/include/vmconfig.h"
)
option(MYDEBUG "enable debug compilation" OFF) 
set (EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
